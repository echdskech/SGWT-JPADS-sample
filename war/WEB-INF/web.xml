<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    
<!--     <context-param>
        <param-name>HSQLDB_CONFIG</param-name>
        <param-value>/WEB-INF/hsqlserver.properties</param-value>
    </context-param>
    
    start hsql db on startup for ease of use. Actualy database is located under WEB-INF/db/hsqldb
    <listener>
        <listener-class>com.smartgwt.sample.server.listener.HSQLServletContextListener</listener-class>
    </listener> -->
    
	<!-- Init: initializes SmartGWT framework.  Note that we invoke the Init logic from 
	     both a Listener and a load-on-startup Servlet in this file - see the client-side 
	     documentation topic "com.smartgwt.client.docs.ServerInit" for a discussion of this.  -->
	<listener>
		<listener-class>com.isomorphic.base.InitListener</listener-class>
	</listener>
    
    <servlet>
        <servlet-name>Init</servlet-name>
        <servlet-class>com.isomorphic.base.Init</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- The IDACall servlet handles all Built-in DataSource operations -->
    <servlet>
        <servlet-name>IDACall</servlet-name>
        <servlet-class>com.isomorphic.servlet.IDACall</servlet-class>
    </servlet>
    <!-- RPCManager uses this URL by default for Built-in DataSource operations -->
    <servlet-mapping>
        <servlet-name>IDACall</servlet-name>
        <url-pattern>/JPADS_js/sc/IDACall/*</url-pattern>
    </servlet-mapping>
    
    <!-- The RESTHandler servlet is like IDACall, but for REST requests -->
    <servlet>
        <servlet-name>RESTHandler</servlet-name>
        <servlet-class>com.isomorphic.servlet.RESTHandler</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>RESTHandler</servlet-name>
        <url-pattern>/JPADS_js/sc/RESTHandler/*</url-pattern>
    </servlet-mapping>

    <!-- The DataSourceLoader servlet returns Javascript representations of the dataSources whose
         ID's are passed to it - it is an alternative to using the <loadDS> JSP tag -->
    <servlet>
        <servlet-name>DataSourceLoader</servlet-name>
        <servlet-class>com.isomorphic.servlet.DataSourceLoader</servlet-class>
    </servlet>
    <!-- DataSourceLoader requests -->
    <servlet-mapping>
        <servlet-name>DataSourceLoader</servlet-name>
        <url-pattern>/JPADS_js/sc/DataSourceLoader</url-pattern>
    </servlet-mapping>
    
    <!-- The screenLoader servlet loads screen definitions in javascript notation -->
    <servlet>
        <servlet-name>screenLoader</servlet-name>
        <servlet-class>com.isomorphic.servlet.ScreenLoaderServlet</servlet-class>
    </servlet>
    <!-- The screenLoader servlet loads screen definitions in javascript notation -->
    <servlet-mapping>
        <servlet-name>screenLoader</servlet-name>
        <url-pattern>/JPADS_js/sc/screenLoader</url-pattern>
    </servlet-mapping>

  <!-- EntityManager resource reference name declaration -->
  <persistence-context-ref>
     <persistence-context-ref-name>persistence/em</persistence-context-ref-name>
     <persistence-unit-name>ds</persistence-unit-name>
  </persistence-context-ref>
 
  <!-- EntityManagerFactory resource reference name declaration -->
   <persistence-unit-ref>
       <persistence-unit-ref-name>persistence/emf</persistence-unit-ref-name>
       <persistence-unit-name>ds</persistence-unit-name>
   </persistence-unit-ref>

    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>JPADS.html</welcome-file>
    </welcome-file-list>
    <jsp-config>
        <!-- Isomorphic JSP tags -->
        <taglib>
            <taglib-uri>isomorphic</taglib-uri> 
            <taglib-location>/WEB-INF/iscTaglib.xml</taglib-location> 
        </taglib>        
    </jsp-config>
    <mime-mapping>
        <extension>manifest</extension>
        <mime-type>text/cache-manifest</mime-type>
    </mime-mapping>
</web-app>
